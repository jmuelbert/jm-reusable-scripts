# SPDX-FileCopyrightText: Jürgen Mülbert <juergen.muelbert@web.de>
# SPDX-License-Identifier: EUPL-1.2
name: Documentation Deployment
on:
  push:
    branches: [main]
    paths:
      - 'docs/**'
      - 'mkdocs.yml'
  workflow_dispatch:
permissions:
  contents: read
  pages: write
  id-token: write
jobs:
  build:
    name: Build Documentation
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: write
      pages: write
      id-token: write
    steps:
      - name: 🔒 Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit
      - name: 🧰 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Call Python Environment Setup
        uses: ./.github/actions/python-setup
        id: python-setup
      - name: 📚 Build Documentation
        id: build
        run: |
          hatch run docs:build
          echo "doc-files=$(find site -type f -print | wc -l)" >> "$GITHUB_OUTPUT"
      - name: 📦 Setup Pages
        uses: actions/configure-pages@v5
      - name: 📤 Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site/
      - name: 📢 Create Release Comment
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            const summary = `## 📚 Documentation Deployment

            ### Status
            ✅ Documentation deployed successfully!

            ### Details
            - Files: ${{ steps.build.outputs.doc-files }}
            - Environment: ${{ github.ref_name }}

            ### Languages
            - 🇬🇧 English: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/en/
            - 🇩🇪 German: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/de/
            `;

            await github.rest.repos.createCommitComment({
              ...context.repo,
              commit_sha: context.sha,
              body: summary
            })
  # Deploy job
  deploy:
    # Add a dependency to the build job
    needs: build
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source
    # Deploy to the github-pages environment
    environment:
      name: github-pages
    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
  notify:
    needs: deploy
    if: always()
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: 📧 Process Status
        uses: actions/github-script@v7
        if: needs.deploy.result != 'success'
        with:
          script: |
            const message = `❌ Documentation deployment failed!\n` +
                          `Please check: ${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;

            await github.rest.issues.create({
              ...context.repo,
              title: '📚 Documentation Deployment Failed',
              body: message,
              labels: ['documentation', 'bug']
            });
