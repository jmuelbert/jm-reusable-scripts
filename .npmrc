# .npmrc file optimized for pnpm

# General Configuration

# Use a persistent lockfile to ensure consistent installs across environments
lockfile=true

# Save exact versions in package.json (discourages breaking changes)
save-exact=true

# Don't auto-install peer dependencies. Let the developer manage them explicitly.
auto-install-peers=false

# Strict peer dependencies checking - helps prevent conflicts
strict-peer-dependencies=true

# Shamefully hoist to make things work when packages do not declare all their dependencies correctly.  **Use with caution, consider removing/adjusting later after debugging**
# shamefully-hoist=false # DEFAULT: False is generally better

# Fetching and Caching

# The store directory where pnpm saves all downloaded packages.  **Important for disk space efficiency**
store-dir=~/.pnpm-store

# Enable offline mode if the store is available and packages are cached
offline=false

# Enable package cache pruning when disk space is low (experimental)
# prune-store-when-disk-space-low=false  # Still experimental

# Set maximum number of concurrent network requests
max-sockets=50

# Registry Configuration

# Official npm registry (default, can be overridden)
registry=https://registry.npmjs.org/

# Set a mirror for the npm registry for faster downloads in certain regions (e.g., China)
# registry=https://registry.npmmirror.com/  # Alibaba Cloud's npm mirror (China)
# registry=https://r.cnpmjs.org/ # another option in China
# registry=https://registry.yarnpkg.com/ # Yarn's registry (compatible)

# Authentication for private registries (replace with actual values)
# @my-org:registry=https://my-private-registry.com/
# //my-private-registry.com/:_authToken=YOUR_AUTH_TOKEN

# Node Version Management (Optional, for use with nvm/fnm/volta)

# Uncomment the following line to specify the Node.js version to use (optional)
# node-version=18

# Logging

# Set log level (silent, error, warn, info, debug)
loglevel=info

#  Progress bar display.  `false` is useful in CI environments
progress=true

# CI/Automation Configuration

# Use `ci=true` to prevent interactive prompts during installation.
# This is usually set by CI environments, but can be set explicitly here as well.
# ci=true  # Set in CI environment, not necessarily here

# Filter Configuration (monorepos - useful for speed in large monorepos)

# Filter by project directory (only install dependencies for packages in these dirs)
# filter[]=./packages/my-package
# filter[]=./apps/my-app

# Exclude project directory (exclude packages from installation)
# filter[]=-./packages/ignored-package

# Scripts

# Allow lifecycle scripts to access environment variables
enable-pre-post-scripts=true

# Disable pre/post scripts completely (use with caution)
# enable-pre-post-scripts=false  # Safer to explicitly enable what you need

# Other Options

# Disable update notifier (reduces network calls)
update-notifier=false

# Enable global bin linking so you can run the command of global packages in your terminal
link-workspace-packages=true

# Prevent pnpm from creating a `node_modules` folder in the root directory (useful with workspaces)
symlink=false

# Override dependency ranges (dangerous, use with caution)
# overrides=

# Security - Only allow packages from the official npm registry or a trusted private registry
# scope=@my-org
# always-auth=true
